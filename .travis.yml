# Copyright (c) <year> <author> (<email>)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "SOEdlVlUeBFClqAs6+c9zHACeHTwC26XZlyxWq7O7T9FwkyvmODPZ3vpgS53zy12eQqn1RzNDIQY1LIg4rKq2VgtqqUzEatRoqGNTEaA+MK63kBWs4aTTr7wA/lSn9W1aC31CRxMkY3rrrgPNZO66J+lm9GvSN5D+g6velhJvcyRT2e4Umh9zu7vBVQmeWut8el3PNdi+WciC7OH+T4eHvP5YPjqYmujnTnV1K26ZMbXScOWWz/5xb6X3m5z90IQ4+eALbvJNrmd/p7UzjNWlV1zj+uD507bdFEiYZH9Bpc4sq79TSXcX1Tclyfoc+8kLbDzW4sYHa5zX1wmKVaoXKlfuKFDgf9YOzCEBilPhZpp3iGXjIGGZuROAQjrsmTbXdWV01ln4vS22zkONFI4fQop2Vi8vd6jUTtjHsmQcI90hV0EYM4Pf9Jy1vqvG/pKGpXehtiGPPzJ0MuWhMnPvU0HQqFsiFccrFEi9/wMrtybtXS1qCLvd324ZjhRm9ex6JuvROjRPtuqH54hC6l16IBbDIl1tIhkYlusF2IquS2SsM9DajI//fVbBHHLe6CeWUA6fu7hO7mabIPgZh51yr2pmmgGXm9m8WP7UjWHiufMG585wHkmf8z2+EMPU0Dn8iWhR5j/vM+SF6BZ+0TNMLm1jwq8bM6pSGA8+sOH/FM="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  coverity_scan:
    project:
      name: "kartikkumar/cppbase"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DPROJECT_NAME=cppbase -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      pip install --user cpp-coveralls;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DPROJECT_NAME=cppbase -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
